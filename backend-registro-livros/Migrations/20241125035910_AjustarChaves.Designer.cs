// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_registro_livros.Data;

namespace backend_registro_livros.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20241125035910_AjustarChaves")]
    partial class AjustarChaves
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("backend_registro_livros.Models.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("CodAs");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("backend_registro_livros.Models.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.HasKey("CodAu");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("backend_registro_livros.Models.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(4)");

                    b.Property<int>("Edicao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("FormaCompra")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.HasKey("Codl");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("backend_registro_livros.Models.LivroAssunto", b =>
                {
                    b.Property<int>("Livro_Codl")
                        .HasColumnType("int");

                    b.Property<int>("Assunto_CodAs")
                        .HasColumnType("int");

                    b.HasKey("Livro_Codl", "Assunto_CodAs");

                    b.HasIndex("Assunto_CodAs");

                    b.ToTable("Livro_Assunto");
                });

            modelBuilder.Entity("backend_registro_livros.Models.LivroAutor", b =>
                {
                    b.Property<int>("Livro_Codl")
                        .HasColumnType("int");

                    b.Property<int>("Autor_CodAu")
                        .HasColumnType("int");

                    b.HasKey("Livro_Codl", "Autor_CodAu");

                    b.HasIndex("Autor_CodAu");

                    b.ToTable("Livro_Autor");
                });

            modelBuilder.Entity("backend_registro_livros.Models.LivroAssunto", b =>
                {
                    b.HasOne("backend_registro_livros.Models.Assunto", "Assunto")
                        .WithMany("LivrosAssuntos")
                        .HasForeignKey("Assunto_CodAs")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("backend_registro_livros.Models.Livro", "Livro")
                        .WithMany("LivrosAssuntos")
                        .HasForeignKey("Livro_Codl")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("backend_registro_livros.Models.LivroAutor", b =>
                {
                    b.HasOne("backend_registro_livros.Models.Autor", "Autor")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("Autor_CodAu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("backend_registro_livros.Models.Livro", "Livro")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("Livro_Codl")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("backend_registro_livros.Models.Assunto", b =>
                {
                    b.Navigation("LivrosAssuntos");
                });

            modelBuilder.Entity("backend_registro_livros.Models.Autor", b =>
                {
                    b.Navigation("LivrosAutores");
                });

            modelBuilder.Entity("backend_registro_livros.Models.Livro", b =>
                {
                    b.Navigation("LivrosAssuntos");

                    b.Navigation("LivrosAutores");
                });
#pragma warning restore 612, 618
        }
    }
}
